---
const {strength} = Astro.props;
const animateInDuration = "2s";
const animateInEase = "ease-in-out";

const transformYStyle = `${100 * strength}%`;
---
<style define:vars={{animateInDuration, animateInEase, transformYStyle}}>
    @keyframes animateIn {
        from {
            transform: translate3d(0, var(--transformYStyle), 0);
        }
        to {
            transform: translate3d(0, 0, 0);
        }
    }

    .parallax-layer {
        transform: translate3d(0, 0, 0);
        animation: animateIn var(--animateInDuration) var(--animateInEase);
    }
</style>
<div class="parallax-layer absolute top-0 bottom-0 right-0 left-0 overflow-hidden"
     data-parallax-layer-strength={strength}>
    <slot/>
</div>
<script>
    import Lenis from 'lenis';
    import 'lenis/dist/lenis.css';

    const lenis = new Lenis({
        autoRaf: true,
        syncTouch: true,
    });

    const parallaxLayers = Array.from(document.querySelectorAll('.parallax-layer') as NodeListOf<HTMLElement>
    ).map((node) => ({
        node,
        strength: Number(node.getAttribute('data-parallax-layer-strength'))
    }));

    function animateParallaxLayers(scrollY: number) {
        parallaxLayers.forEach((layer) => {
            const transformY = scrollY * (1 - layer.strength);
            layer.node.style.transform = `translate3d(0, ${transformY}px, 0)`;
        });
    }

    lenis.on('scroll', (e) => {
        animateParallaxLayers(e.scroll);
    });

    lenis.stop();

    parallaxLayers[0].node.addEventListener('animationend', () => {
        lenis.start();
    });
</script>
